---
- name: Set openresty yum repository
  yum_repository:
    name: openresty
    description: Official OpenResty Open Source Repository for CentOS
    enabled: yes
    baseurl: https://openresty.org/package/centos/$releasever/$basearch
    gpgcheck: yes
    gpgkey: https://openresty.org/package/pubkey.gpg
    state: present
  tags:
    - always

- name: Ensure openresty is installed
  yum:
    name: openresty,openresty-resty,openresty-opm
    state: present
    update_cache: true
  tags:
    - install

- name: Ensure nginx group exists
  group:
    name: nginx
    system: yes
    state: present
  tags:
    - user

- name: Ensure nginx user exists
  user:
    name: nginx
    shell: /sbin/nologin
    home: /var/cache/nginx
    system: yes
    group: nginx
    move_home: yes
    state: present
  tags:
    - user

- name: Create openresty directorys
  file:
    path: '{{ item }}'
    state: directory
    recurse: false
    owner: nginx
    group: nginx
  loop:
    - '{{ openresty_log_path }}'
    - /usr/local/openresty/nginx/conf/vhost.d/
    - /usr/local/openresty/nginx/conf/certs/
    - /usr/share/nginx/

- name: Create nginx.conf
  template:
    src: nginx.conf.j2
    dest: /usr/local/openresty/nginx/conf/nginx.conf
    validate: /usr/local/openresty/nginx/sbin/nginx -t -c %s
  notify:
    - reload openresty
  tags:
    - config

- name: Create default vhost config
  template:
    src: default.conf.j2
    dest: /usr/local/openresty/nginx/conf/vhost.d/default.conf
  when:
    - not openresty_allow_non_servername
  notify:
    - reload openresty
  tags:
    - config

- name: Create Web vhost config
  template:
    src: vhost.conf.j2
    dest: /usr/local/openresty/nginx/conf/vhost.d/{{ item.filename | default(item.server_name) }}.conf
  loop: '{{ openresty_vhosts }}'
  when:
    - openresty_vhosts is defined
    - openresty_vhosts|length > 0
  notify:
    - reload openresty
  tags:
    - config

- name: Create ssl certificate
  copy:
    src: "{{ item.ssl_certificate }}"
    dest: "/usr/local/openresty/nginx/conf/certs/{{ item.server_name }}.cert.pem"
  when:
    - openresty_vhosts is defined
    - openresty_vhosts|length > 0
    - item.enable_ssl is defined
    - item.enable_ssl | default(false)
    - item.ssl_certificate is defined
  loop: "{{ openresty_vhosts }}"
  notify:
    - reload openresty

- name: Create ssl certificate key
  copy:
    src: "{{ item.ssl_certificate_key }}"
    dest: "/usr/local/openresty/nginx/conf/certs/{{ item.server_name }}.key.pem"
  when:
    - openresty_vhosts is defined
    - openresty_vhosts|length > 0
    - item.enable_ssl is defined
    - item.enable_ssl | default(false)
    - item.ssl_certificate_key is defined
  loop: "{{ openresty_vhosts }}"
  notify:
    - reload openresty

- name: Create systemd service
  copy:
    src: openresty.service
    dest: /usr/lib/systemd/system/openresty.service
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version|int >= 7
  register: create_systemd_service

- name: daemon reload
  systemd:
    name: openrety
    daemon_reload: true
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version|int >= 7
    - create_systemd_service is changed

- name: Ensure openresty started
  service:
    name: openresty
    state: started
    enabled: yes
